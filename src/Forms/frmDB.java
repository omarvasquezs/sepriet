/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Forms;

import java.awt.Color;
/* imports Connection/SQLException/JOptionPane are not needed after refactor */

/**
 *
 * @author omarv
 */
public class frmDB extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(frmDB.class.getName());

    /**
     * Creates new form frmDbSettings
     */
    public frmDB() {
        initComponents();
        getContentPane().setBackground(Color.WHITE);
        // Center window on screen
        setLocationRelativeTo(null);
        // Disable maximize button
        setResizable(false);
        loadSettings(); // Load settings when the form is opened
        // Set window icon
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/Forms/icon.png")).getImage());
        // strips LAF effects
        btnRegresar.setUI(new javax.swing.plaf.basic.BasicButtonUI());
        btnSaveSettings.setUI(new javax.swing.plaf.basic.BasicButtonUI());
        btnTestConnection.setUI(new javax.swing.plaf.basic.BasicButtonUI());
        // Mouse point on hover
        btnRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSaveSettings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTestConnection.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }

    private void loadSettings() {
        try (java.io.FileInputStream fis = new java.io.FileInputStream("db_settings.properties")) {
            java.util.Properties props = new java.util.Properties();
            props.load(fis);

            txtHost.setText(props.getProperty("db.host", "localhost"));
            txtPort.setText(props.getProperty("db.port", "3306"));
            txtDatabase.setText(props.getProperty("db.database", ""));
            txtUsername.setText(props.getProperty("db.username", "root"));
            txtPassword.setText(props.getProperty("db.password", ""));
        } catch (java.io.IOException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Failed to Load Settings: " + ex.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtHost = new javax.swing.JTextField();
        lblHost = new javax.swing.JLabel();
        lblPort = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        lblDB = new javax.swing.JLabel();
        txtDatabase = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblUsername1 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblTitulo = new javax.swing.JLabel();
        btnTestConnection = new javax.swing.JButton();
        btnSaveSettings = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONFIGURACIÃ“N BASE DE DATOS");

        txtHost.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblHost.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHost.setText("HOST:");

        lblPort.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPort.setText("PORT:");

        txtPort.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblDB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDB.setText("DATABASE:");

        txtDatabase.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblUsername.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblUsername.setText("USERNAME:");

        txtUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblUsername1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblUsername1.setText("PASSWORD:");

        txtPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitulo.setText("DATABASE SETTINGS");

        btnTestConnection.setBackground(new java.awt.Color(21, 134, 255));
        btnTestConnection.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnTestConnection.setForeground(new java.awt.Color(255, 255, 255));
        btnTestConnection.setText("Test Connection");
        btnTestConnection.setOpaque(true);
        btnTestConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestConnectionActionPerformed(evt);
            }
        });

        btnSaveSettings.setBackground(new java.awt.Color(21, 134, 255));
        btnSaveSettings.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnSaveSettings.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveSettings.setText("Guardar");
        btnSaveSettings.setOpaque(true);
        btnSaveSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveSettingsActionPerformed(evt);
            }
        });

        btnRegresar.setBackground(new java.awt.Color(21, 134, 255));
        btnRegresar.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setText("Regresar");
        btnRegresar.setOpaque(true);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSaveSettings)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTestConnection)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRegresar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDB)
                            .addComponent(lblUsername)
                            .addComponent(lblUsername1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblPort)
                                .addComponent(lblHost)))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitulo)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDatabase, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtHost, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPassword)
                                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTitulo)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPort)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername1)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTestConnection)
                    .addComponent(btnSaveSettings)
                    .addComponent(btnRegresar))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTestConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestConnectionActionPerformed

        String host = txtHost.getText();
        String port = txtPort.getText();
        String database = txtDatabase.getText();
        String username = txtUsername.getText();
        String password = new String(txtPassword.getPassword());

        String url = "jdbc:mariadb://" + host + ":" + port + "/" + database;

        try (java.sql.Connection conn = java.sql.DriverManager.getConnection(url, username, password)) {
            // use the connection to avoid "variable not used" and to verify connectivity
            try {
                if (conn != null && conn.isValid(2)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "ConexiÃ³n Exitosa!", "Success", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "ConexiÃ³n Fallida: conexiÃ³n no vÃ¡lida", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            } catch (java.sql.SQLException innerEx) {
                javax.swing.JOptionPane.showMessageDialog(this, "ConexiÃ³n Fallida: " + innerEx.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } catch (java.sql.SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "ConexiÃ³n Fallida: " + ex.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTestConnectionActionPerformed

    private void btnSaveSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveSettingsActionPerformed

        // Collect fields
        String host = txtHost.getText();
        String port = txtPort.getText();
        String database = txtDatabase.getText();
        String username = txtUsername.getText();
        String password = new String(txtPassword.getPassword());

        // Persist to properties file
        java.util.Properties props = new java.util.Properties();
        props.setProperty("db.host", host);
        props.setProperty("db.port", port);
        props.setProperty("db.database", database);
        props.setProperty("db.username", username);
        props.setProperty("db.password", password);

        try (java.io.FileOutputStream fos = new java.io.FileOutputStream("db_settings.properties")) {
            props.store(fos, "Database Settings");
        } catch (java.io.IOException ioex) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Failed to save settings: " + ioex.getMessage(),
                    "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Test the connection with saved values
        String url = "jdbc:mariadb://" + host + ":" + port + "/" + database;
        try (java.sql.Connection conn = java.sql.DriverManager.getConnection(url, username, password)) {
            try {
                if (conn != null && conn.isValid(2)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Settings saved and connection successful!", "Success", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "ConexiÃ³n Fallida: conexiÃ³n no vÃ¡lida", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            } catch (java.sql.SQLException innerEx) {
                javax.swing.JOptionPane.showMessageDialog(this, "ConexiÃ³n Fallida: " + innerEx.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } catch (java.sql.SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "ConexiÃ³n Fallida: " + ex.getMessage(),
                    "Error de base de datos", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveSettingsActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed

        this.setVisible(false); // Hide frmDB
        frmLogin loginForm = new frmLogin(); // Create an instance of frmLogin
        loginForm.setVisible(true); // Show frmLogin
    }//GEN-LAST:event_btnRegresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new frmDB().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSaveSettings;
    private javax.swing.JButton btnTestConnection;
    private javax.swing.JLabel lblDB;
    private javax.swing.JLabel lblHost;
    private javax.swing.JLabel lblPort;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblUsername1;
    private javax.swing.JTextField txtDatabase;
    private javax.swing.JTextField txtHost;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
